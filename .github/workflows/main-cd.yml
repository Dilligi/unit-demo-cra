name: CD

on:
    push:
        tags:
        - 'v[0-9]+'

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
    create_release:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
              with:
                token: ${{ secrets.REPO_SECRET }}
                fetch-depth: 0

            - uses: actions/setup-node@v1
              with:
                node-version: '16.x'
      
            - uses: actions/cache@v3
              with:
                path: ~/.npm
                key: node-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install dependencies and buld app
              run: |
                npm ci --force
                npm run build

            - name: Find previous release tag
              id: get_previous_tag
              run: |
                PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{github.ref_name}}^)
                echo $PREVIOUS_TAG
                echo ::set-output name=previous_tag::$(git rev-parse $PREVIOUS_TAG) 

            - name: Generate changelog
              id: generate_changelog
              run: |
                git log --pretty=format:$'- hash: %h, name: %s' ${{ steps.get_previous_tag.outputs.previous_tag }}..HEAD > changelog.txt
                echo ::set-output name=changelog::$(cat changelog.txt)

            - name: Upload changelog artifact
              id: upload_artifact
              uses: actions/upload-artifact@v3
              with:
                name: changelog
                path: changelog.txt

            - name: Create release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run:
                gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --notes "${{ steps.generate_changelog.outputs.changelog }}"

            - name: Make issue
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                echo ${{ steps.upload_artifact.outputs }}
                gh issue create --title "Release ${{ github.ref_name }}" --body $'Автор релиза: ${{ github.actor }} \n Дата релиза: ${{ github.event.head_commit.timestamp }} \n Changelog: ${{ steps.upload_artifact.outputs.artifact_url }}' --label RELEASE
              # if [$(gh issue list --search "repo:${{ github.repository }} Release ${{ github.ref_name }}") -eq ""]; then
              #   gh issue create --title "Release ${{ github.ref_name }}" --body $'Автор релиза: ${{ github.actor }} \n Дата релиза: ${{ github.event.head_commit.timestamp }} \n Changelog: ' --label RELEASE
              # else 
              #   num=$(gh issue list --search "Release ${{ github.ref_name }}" --format json | jq -r '.[0].number')
              #   gh issue edit $num --body $'Автор релиза: ${{ github.actor }} \n Дата релиза: ${{ github.event.head_commit.timestamp }} \n Changelog: '
              # fi
    
    upload_to_pages:
      runs-on: ubuntu-latest
      needs: [create_release]

      steps:
        - uses: actions/checkout@v3
          with:
            token: ${{ secrets.REPO_SECRET }}
        - uses: actions/setup-node@v1
          with:
            node-version: '16.x'

        - uses: actions/cache@v3
          with:
            path: ~/.npm
            key: node-modules-${{ hashFiles('**/package-lock.json') }}

        - name: Install dependencies and buld app
          run: |
            npm ci --force
            npx playwright install --with-deps chromium
            npm run build

        - name: Run e2e tests
          run: |
            npm run e2e

        - name: Run unit tests
          run: |
            npm run test-ci

        # - name: Upload Pages artifact
        #   uses: actions/upload-pages-artifact@v2

